AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  NoLuvBeats API
  Serverless API for NoLuvBeats

###############################################################################
### Globals
###############################################################################




###############################################################################
### Globals
###############################################################################

Globals:
  Function:
    Timeout: 300
    Runtime: python3.8
    Environment:
      Variables:
        ASSET_BUCKET: &asset_bucket nlb-site-assets
        ASSET_DB_TABLE: &asset_db_table nlb-db-asset-metadata

###############################################################################
### Resources
###############################################################################

Resources:
  NoLuvBeatsAPI:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: api

  AssetInitiateUploadFunction:
    Type: 'AWS::Serverless::Function' # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/asset/initiate_upload
      Handler: app.handler
      Description: >-
        A Function that generates a presigned url to be used in
        the frontend to upload assets to nlb-site-assets.
      Layers:
        - !Ref SharedLayer
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Sid: AssetBucketPut
              Effect: Allow
              Action:
                - 's3:PutObject'
              Resource:
                - !Sub
                  - 'arn:aws:s3:::${bucketName}/*'
                  - { bucketName: *asset_bucket }
      Events:
        AssetInitiateUpload:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref NoLuvBeatsAPI
            Path: '/asset/initiate-upload'
            Method: POST

  AssetPutFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: functions/asset/put
      Handler: app.handler
      Description: >-
        A Function that retrieves asset data for the object that has
        been updated in nlb-site-assets and puts to dynamodb.
      Layers:
        - !Ref SharedLayer
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Sid: AssetBucketGet
              Effect: Allow
              Action:
                - 's3:GetObject'
              Resource:
                - !Sub
                  - 'arn:aws:s3:::${bucketName}/*'
                  - { bucketName: *asset_bucket }
            - Sid: AssetMetadataTablePut
              Effect: Allow
              Action:
                - 'dynamodb:PutItem'
              Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AssetMetadataTable}'
      Events:
        NlbSiteAssetsEvent:
          Type: S3
          Properties:
            Bucket:
              Ref: AssetBucket
            Events:
              - 's3:ObjectCreated:*'

  SharedLayer:
    Type: 'AWS::Serverless::LayerVersion'
    Properties:
      LayerName: nlb-api-shared-layer
      ContentUri: layers/shared
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: python3.8

  AssetMetadataTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: *asset_db_table
      PrimaryKey:
        Name: id #TODO refine this after we structure metadata schema
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  AssetBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: *asset_bucket
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

###############################################################################
### Outputs
###############################################################################

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  NoLuvBeatsAPI:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${NoLuvBeatsAPI}.execute-api.${AWS::Region}.amazonaws.com/api/asset/initiate-upload"
  AssetInitiateUploadFunction:
    Description: "Asset Initiate Upload Lambda Function ARN"
    Value: !GetAtt AssetInitiateUploadFunction.Arn
  AssetInitiateUploadFunctionIamRole:
    Description: "Implicit IAM Role created for AssetInitiateUploadFunction"
    Value: !GetAtt AssetInitiateUploadFunctionRole.Arn
  AssetPutFunction:
    Description: "Asset Put lambda Function ARN"
    Value: !GetAtt AssetPutFunction.Arn
  AssetPutFunctionIamRole:
    Description: "Implicit IAM Role created for AssetPutFunction"
    Value: !GetAtt AssetPutFunctionRole.Arn
  AssetMetadataTable:
    Description: "Asset Metadata dynamodb table ARN"
    Value: !GetAtt AssetMetadataTable.Arn
  AssetBucket:
    Description: "Asset bucket ARN"
    Value: !GetAtt AssetBucket.Arn
